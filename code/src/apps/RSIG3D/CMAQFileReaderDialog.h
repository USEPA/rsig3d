
#ifndef CMAQFILEREADERDIALOG_H
#define CMAQFILEREADERDIALOG_H

/******************************************************************************
PURPOSE: CMAQFileReaderDialog - Pop-up GUI dialog window for finding, selecting
         CMAQ files and variable to subset.

NOTES:   Model-Controller Design Pattern. Implemented using QT GUI API.

HISTORY: 2022-01-10 plessel.todd@epa.gov
STATUS:  unreviewed tested
******************************************************************************/

//================================ INCLUDES ===================================

#include <string> // For class std::string.

#include <QDialog> // For class QDialog and Q* macros.
class QString;
class QLineEdit;
class QListWidget;
class QListWidgetItem;

class Ui_CMAQFileReader;

#include "CMAQFileReaderModel.h" // For class CMAQFileReaderModel.

//================================== TYPES ====================================

class Ui_CMAQFileReader; // Generated by moc utility from cmaqfilereader.ui.

class CMAQFileReaderDialog : public QDialog {

  // QT magic:

  Q_OBJECT
  Ui_CMAQFileReader* ui;
  Q_DISABLE_COPY( CMAQFileReaderDialog );

private Q_SLOTS:

  // GUI event callbacks:

  void onLocal();
  void onRemote();
  void onConnect();
  void onSetUser();
  void onSetDataDirectory();
  void onSelectedDataDirectoryListingItem( QListWidgetItem* item );
  void onSelectedDataVariable( QListWidgetItem* item );
  void onSetHTDirectory();
  void onSelectedHTDirectoryListingItem( QListWidgetItem* item );
  void onSetZFDirectory();
  void onSelectedZFDirectoryListingItem( QListWidgetItem* item );
  void onSetWWINDDirectory();
  void onSelectedWWINDDirectoryListingItem( QListWidgetItem* item );
  void onReadVariable();
  void onCancel();

private:

  // Attributes:

  CMAQFileReaderModel& model; // Reference to state to show and update.

  // Helpers:

  typedef const std::string& (CMAQFileReaderModel::*Getter)() const;
  typedef void (CMAQFileReaderModel::*Setter)( const std::string& );
  typedef const std::string& (CMAQFileReaderModel::*Lister)() const;

  //CMAQFileReaderDialog( const CMAQFileReaderDialog& ); // Not allowed.
  //CMAQFileReaderDialog& operator=( const CMAQFileReaderDialog& ); // Not allowed
  void updateFromModel();

  void updateDirectory( Setter setDirectory,
                        Lister getDirectoryListing,
                        QLineEdit* directoryText,
                        QListWidget* directoryListingText );

  void updateListing( Lister getListing, QListWidget* listingText );

  void updateListing( const QListWidgetItem* item,
                      Getter getDirectory,
                      Setter setDirectory,
                      Lister getDirectoryListing,
                      Setter setFile,
                      Lister getVariableListing,
                      QLineEdit* directoryText,
                      QListWidget* directoryListingText,
                      QListWidget* variableListingText );

  void disableWhileConnecting();
  void enableAfterConnect();

public:

  // Commands:

  CMAQFileReaderDialog( CMAQFileReaderModel& theModel );
  virtual ~CMAQFileReaderDialog();

  // Queries:

  virtual bool invariant() const;
};


#endif /* CMAQFILEREADERDIALOG_H */



